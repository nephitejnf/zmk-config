/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DVORAK 0
#define QWERTY 1
#define LFT 2
#define RGHT 3
#define TRI 4
#define GAMING 5

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };

    behaviors {
        gl0: game_layer_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "GAME_LAYER_0";
            tapping-term-ms = <200>;
            bindings = <&kp LSFT>,<&tog QWERTY>, <&tog GAMING>;
        };
        gl1: game_layer_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "GAME_LAYER_1";
            tapping-term-ms = <200>;
            bindings = <&kp TAB>,<&kp ESC>, <&kp F1>;
        };
        gl2: game_layer_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "GAME_LAYER_2";
            tapping-term-ms = <200>;
            bindings = <&kp LCTL>,<&kp LSFT>, <&kp LALT>;
        };
        gl3: game_layer_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "GAME_LAYER_3";
            tapping-term-ms = <200>;
            bindings = <&kp N1>,<&kp N2>, <&kp N3>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
                /*
                | '         | , | . | P | Y    |                         | F    | G | I | R | L        |
                | A         | O | E | U | I    |                         | D    | H | K | N | S        |
                | ; (LSFT)  | Q | J | K | X    |                         | B    | M | W | V | Z (LSFT) |
                                        | LSFT(GAME Switch) | LCTL |            | SPC (LGUI) | RET (MO 3) |
                */
       		default_layer {
		bindings = <
		&kp QUOT      &kp CMMA &kp DOT &kp P &kp Y 						        &kp F &kp G  &kp C &kp R   &kp L 
		&kp A         &kp O    &kp E   &kp U &kp I 			        	        &kp D &kp H  &kp T &kp N   &kp S
		&mt LSFT SCLN &kp Q    &kp J   &kp K &kp X				                &kp B &kp M  &kp W &kp V &mt LSFT Z
          				             &gl0 &kp BSPC  			&mt LGUI SPC &lt RGHT RET
		>;
		};

                /*
                | Q         | W | E | R | T    |                         | Y    | U | I | O | P          |
                | A         | S | D | F | G    |                         | H    | J | K | L | '          |
                | Z (LSFT)  | X | C | V | B    |                         | N    | M | , | . | RET (LSFT) |
                                        | MO 2 |  |            | SPC | MO 3 |
                */
       		qwerty_layer {
		bindings = <
		&kp Q      &kp W &kp E &kp R &kp T 						        &kp Y &kp U  &kp I    &kp O   &kp P 
		&kp A      &kp S &kp D &kp F &kp G 			        	        &kp H &kp J  &kp K    &kp L   &kp QUOT
		&mt LSFT Z &kp X &kp C &kp V &kp B				                &kp N &kp M  &kp CMMA &kp DOT &mt LSFT RET
          				             &trans &trans  			&kp SPC &mo RGHT 
		>;
		};

            /*
                | 1   | 2       | 3 | 4 | 5    |                          | 6    | 7 | 8 | 9 | 0   |
                | TAB | LCTL(S) | " | | | #    |                          | -    | = | [ | ] | DEL |
                | ESC | ~       | \ | # | ~    |                          | -    | ` | [ | ] | DEL |
                                        | MO 2 | LGUI |            | RGUI | MO 3 |
            */
       		left_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3       &kp NUM_4        &kp NUM_5		                     &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
		&kp TAB    &kp LC(S)    &kp DQT         &kp PIPE2        &kp HASH 		                     &kp MINUS &kp EQL   &kp LBKT  &kp RBKT  &kp DEL 
		&kp ESC    &kp TILDE 	&kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2 	                     &kp MINUS &kp GRAVE &kp LBKT  &kp RBKT  &kp DEL 
					                                             &mo LFT     &kp LGUI  		&kp RGUI &mo RGHT
		>;
		};
		
            /*
                | !    | @ | # | $ | %    |                         | ^    | &    | *    | (     | )    |
                | #    | ? | " | : | ;    |                         | LEFT | DOWN | UP   | RGHT  | BKSP |
                | LSFT | + | [ | ] | \    |                         | _    | =    | {    | }     | DEL  |
                                   | MO 4 | LCTL |            | SPC | MO 3 |
            */
		right_layer {
		bindings = <
		&kp BANG  &kp ATSN   &kp HASH  &kp DLLR   &kp PRCT    			             &kp CRRT  &kp AMPS      &kp KMLT  &kp LPRN   &kp RPRN 
		&kp HASH  &kp QMARK  &kp FSLH  &kp COLN   &kp SCLN 			                 &kp LEFT  &kp DOWN      &kp DOWN  &kp RIGHT  &kp BKSP
		&kp LSFT  &kp KPLS   &kp LBKT  &kp RBKT   &kp BSLH    			             &kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp DEL
					                              &mo TRI   &kp LCTL  		&kp SPC  &mo RGHT 
		>;
		};	
		
            /*
                | 1        | 2       | 3       | 4  | 5  |                  |  |       |        |      |  |
                | F1       | F2      | F3      | F4 | F5 |                  |  | PG UP | VOL UP | MUTE |  |
                | BT Clear | BT Next | BT Prev | F6 | F7 |                  |  | PG DN | VOL DN |      |  |
                                                    |    |  |            |  |  |
            */
		tri_layer {
		bindings = <
		&kp NUM_1   &kp NUM_2  &kp NUM_3   &kp NUM_4    &kp NUM_5 			           &trans &trans     &trans       &trans     &trans
		&kp F1      &kp F2     &kp F3      &kp F4       &kp F5  					   &trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV  &kp F6       &kp F7   				       &trans &kp PG_DN  &kp K_VOL_DN &trans     &trans   
					                                    &trans &trans  			&trans &trans 
		>;
		};	

            /*
                | TAB/ESC/F1     | Q | W | E | R |                  |  |       |        |      |  |
                | LCTL/LSFT/LALT | A | S | D | F |                  |  | PG UP | VOL UP | MUTE |  |
                | 1/2/3          | Z | X | C | V |                  |  | PG DN | VOL DN |      |  |
                                             | gl0 | SPC |            |  |  |
            */
		game_layer {
		bindings = <
		&gl1   &kp Q &kp W  &kp E    &kp R 			            &kp N1 &kp N2  &kp N3 &kp R &kp PAUSE_BREAK
		&gl2   &kp A &kp S  &kp D    &kp F  				    &kp N4 &kp N5  &kp N6 &kp T &kp M 
		&gl3   &kp Z &kp X  &kp C    &kp V   				    &kp N7 &kp N8  &kp N9 &kp J &kp RET   
					                     &gl0 &kp SPC  	&kp LEFT &kp RIGHT 
		>;
		};	
        
	};
};
